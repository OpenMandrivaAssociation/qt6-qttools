diff -up qttools-everywhere-src-6.9.1/src/qdoc/qdoc/src/qdoc/clang/AST/QualTypeNames.h.omv~ qttools-everywhere-src-6.9.1/src/qdoc/qdoc/src/qdoc/clang/AST/QualTypeNames.h
--- qttools-everywhere-src-6.9.1/src/qdoc/qdoc/src/qdoc/clang/AST/QualTypeNames.h.omv~	2025-07-27 18:03:15.804107106 +0200
+++ qttools-everywhere-src-6.9.1/src/qdoc/qdoc/src/qdoc/clang/AST/QualTypeNames.h	2025-07-27 18:46:53.730300412 +0200
@@ -25,6 +25,7 @@ QT_WARNING_DISABLE_MSVC(4267)
 #include "clang/AST/DeclarationName.h"
 #include "clang/AST/GlobalDecl.h"
 #include "clang/AST/Mangle.h"
+#include "clang/Basic/Version.h"
 
 QT_WARNING_POP
 
@@ -160,9 +161,15 @@ static inline const Type *getFullyQualif
     // If a fully qualified arg is different from the unqualified arg,
     // allocate new type in the AST.
     if (MightHaveChanged) {
+#if CLANG_VERSION_MAJOR >= 21
+      QualType QT = Ctx.getTemplateSpecializationType(
+          TST->getTemplateName(), FQArgs, /*CanonicalArgs=*/std::nullopt,
+          TST->getCanonicalTypeInternal());
+#else
       QualType QT = Ctx.getTemplateSpecializationType(
           TST->getTemplateName(), FQArgs,
           TST->getCanonicalTypeInternal());
+#endif
       // getTemplateSpecializationType returns a fully qualified
       // version of the specialization itself, so no need to qualify
       // it.
@@ -192,9 +199,15 @@ static inline const Type *getFullyQualif
       // allocate new type in the AST.
       if (MightHaveChanged) {
         TemplateName TN(TSTDecl->getSpecializedTemplate());
+#if CLANG_VERSION_MAJOR >= 21
+        QualType QT = Ctx.getTemplateSpecializationType(
+            TN, FQArgs, /*CanonicalArgs=*/std::nullopt,
+            TSTRecord->getCanonicalTypeInternal());
+#else
         QualType QT = Ctx.getTemplateSpecializationType(
             TN, FQArgs,
             TSTRecord->getCanonicalTypeInternal());
+#endif
         // getTemplateSpecializationType returns a fully qualified
         // version of the specialization itself, so no need to qualify
         // it.
@@ -257,7 +270,10 @@ static inline NestedNameSpecifier *getFu
           Ctx, Scope->getPrefix(), WithGlobalNsPrefix);
     case NestedNameSpecifier::Super:
     case NestedNameSpecifier::TypeSpec:
-    case NestedNameSpecifier::TypeSpecWithTemplate: {
+#if CLANG_VERSION_MAJOR < 21
+    case NestedNameSpecifier::TypeSpecWithTemplate:
+#endif
+    {
       const Type *Type = Scope->getAsType();
       // Find decl context.
       const TagDecl *TD = nullptr;
@@ -369,7 +385,10 @@ inline NestedNameSpecifier *createNested
 
   return NestedNameSpecifier::Create(
       Ctx, createOuterNNS(Ctx, TD, FullyQualify, WithGlobalNsPrefix),
-      false /*No TemplateKeyword*/, TypePtr);
+#if CLANG_VERSION_MAJOR < 21
+      false /*No TemplateKeyword*/,
+#endif
+      TypePtr);
 }
 
 /// Return the fully qualified type, including fully-qualified
@@ -393,9 +412,13 @@ inline QualType getFullyQualifiedType(Qu
     Qualifiers Quals = QT.getQualifiers();
     // Fully qualify the pointee and class types.
     QT = getFullyQualifiedType(QT->getPointeeType(), Ctx, WithGlobalNsPrefix);
+#if CLANG_VERSION_MAJOR >= 21
+    QT = Ctx.getMemberPointerType(QT, MPT->getQualifier(), MPT->getMostRecentCXXRecordDecl());
+#else
     QualType Class = getFullyQualifiedType(QualType(MPT->getClass(), 0), Ctx,
                                            WithGlobalNsPrefix);
     QT = Ctx.getMemberPointerType(QT, Class.getTypePtr());
+#endif
     // Add back the qualifiers.
     QT = Ctx.getQualifiedType(QT, Quals);
     return QT;
diff -up qttools-everywhere-src-6.10.0-beta3/src/qdoc/cmake/QDocConfiguration.cmake.omv~ qttools-everywhere-src-6.10.0-beta3/src/qdoc/cmake/QDocConfiguration.cmake
--- qttools-everywhere-src-6.10.0-beta3/src/qdoc/cmake/QDocConfiguration.cmake.omv~	2025-08-22 19:53:47.621176802 +0200
+++ qttools-everywhere-src-6.10.0-beta3/src/qdoc/cmake/QDocConfiguration.cmake	2025-08-22 19:53:52.579219290 +0200
@@ -8,6 +8,6 @@ set(QDOC_MINIMUM_CLANG_VERSION "17")
 
 # List of explicitly supported Clang versions for QDoc
 set(QDOC_SUPPORTED_CLANG_VERSIONS
-    "20.1" "19.1" "18.1" "17.0"
+    "21.1" "20.1" "19.1" "18.1" "17.0"
 )
 
